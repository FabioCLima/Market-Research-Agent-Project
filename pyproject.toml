[project]
name = "market-research-agent-project"
version = "1.0.0"
description = "UdaPlay - AI Research Agent for Video Game Industry Questions"
authors = [{ name = "Fabio Lima", email = "lima.fisico@gmail.com" }]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "chromadb>=1.2.0",
    "openai>=2.5.0",
    "pydantic>=2.12.3",
    "python-dotenv>=1.1.1",
    "tavily-python>=0.7.12",
    "loguru>=0.7.0",
    "pytest>=8.4.2",
    "pytest-xdist>=3.8.0",
    "streamlit>=1.50.0",
    "plotly>=6.3.1",
]

[project.optional-dependencies]
dev = ["ruff", "pyright", "pytest", "pytest-xdist"]
notebooks = ["jupyter", "ipykernel"]
deploy = ["fastapi", "uvicorn[standard]", "gradio"]

# ===================================================================
# LINT E FORMATAÇÃO (RUFF)
# ===================================================================
[tool.ruff]
line-length = 88
indent-width = 4
exclude = ["venv", ".venv", "env", ".env", "node_modules", "__pycache__"]
target-version = "py313"
fix = true
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "CPY001", "T201", "COM812", "D100", "D104", "D107", "D203", "D213",
]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ANN201", "S101"]

[tool.ruff.lint.isort]
known-first-party = ["healthbot"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

# ===================================================================
# TIPAGEM (PYRIGHT)
# ===================================================================
[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.13"
include = ["src", "tests"]
exclude = [
    "**/venv", "**/.venv", "**/env", "**/.env", "**/node_modules", "**/__pycache__",
]
venv = ".venv"
venvPath = "."
executionEnvironments = [{ root = "src" }]

# ===================================================================
# TESTES (PYTEST)
# ===================================================================
[tool.pytest.ini_options]
addopts = "-s --color=yes --tb=short"
pythonpath = ["src"]
testpaths = ["tests"]

# ===================================================================
# BLACK - FORMATAÇÃO
# ===================================================================
[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
  )/
)
'''

# ===================================================================
# ISORT - ORGANIZAÇÃO DE IMPORTS
# ===================================================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["healthbot"]
skip = ["venv", ".venv", "env", ".env", "node_modules", "__pycache__"]

# ===================================================================
# MYPY - VERIFICAÇÃO DE TIPOS
# ===================================================================
[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

files = ["src", "tests"]
exclude = [
    "venv",
    ".venv",
    "env",
    ".env",
    "node_modules",
    "__pycache__"
]

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langchain_community.*",
    "langchain_openai.*",
    "langchain_postgres.*",
    "langchain_chroma.*",
    "langgraph.*",
    "openai.*",
    "tiktoken.*",
    "beautifulsoup4.*",
    "pypdf.*",
    "psycopg.*",
    "duckduckgo_search.*",
    "grandalf.*"
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-xdist>=3.8.0",
]
